<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.blog.repository.ReplyRepository">

    <select id="findAllByBlogId" resultType="com.spring.blog.dto.ReplyResponseDTO" parameterType="long">
        SELECT
            reply_id as replyId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            blog_id = #{blogId}
    </select>

    <select id="findByReplyId" resultType="com.spring.blog.dto.ReplyResponseDTO" parameterType="long">
        SELECT
            reply_id as replyId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            reply_id = #{replyId}
    </select>

    <delete id="deleteByReplyId">
        DELETE FROM
            reply
        WHERE
            reply_id = #{replyId}
    </delete>

    <insert id="save" parameterType="com.spring.blog.dto.ReplyCreateRequestDTO">
        INSERT INTO
            REPLY (blog_id, reply_writer, reply_content)
        VALUES
            (#{blogId}, #{replyWriter}, #{replyContent})
    </insert>

    <update id="update" parameterType="com.spring.blog.dto.ReplyUpdateRequestDTO">
        UPDATE REPLY
            SET
                reply_writer = #{replyWriter},
                reply_content = #{replyContent},
                updated_at = now()
            WHERE
                reply_id = #{replyId}
    </update>

    <delete id="deleteByBlogId" parameterType="long">
        DELETE FROM
            reply
            WHERE
            blog_id = #{blogId}
    </delete>

</mapper>